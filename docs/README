VDrift README
Chris Guirl (thelusiv)
2005/11/03


README		

For installation instructions only, see INSTALL.

Frequently Asked Questions

Get the latest version of this document from
(http://vdrift.net/staticpages/index.php/README).

1. Playing VDrift
1.1. Q: How to fix sound problems?
     A: VDrift can use two different sound libraries, OpenAL and FMOD. Using OpenAL
on Linux has some problems, some of which are solvable.

If the engine sound is very broken or choppy sounding, and you hear some
noise or crackling, you need to tell OpenAL to try to use a different
sound backend. If you don't have an ~/.openalrc file, create it with these
contents, or modify your current one to look like this:

(define devices                 '(native alsa sdl arts esd null))
(define alsa-device             "dsp0")
(define speaker-num             2)
;(define sampling-rate          22050)

The important line here is the "define devices" line, OpenAL attempts to
use each of those sound output methods in order. It uses the first one
that works; in some cases native will work best, in other cases perhaps
alsa.

If you don't hear lots of crackling and choppiness, but you still hear a
'click, click, click' sound as the engine sample loops, this is a bug in
OpenAL for Linux (or a feature we haven't found a way around...) and this
can be fixed by switching to the FMOD sound library. See FAQ: How to
enable FMOD? (http://vdrift.sourceforge.net/faqman/index.php?op=view&t=22)
for more information.

1.2. Q: How to play a networked multiplayer game?
     A: Network Play

The network play that is included is free drive mode. Only two players are
allowed, and no collision detection is done between the cars yet. One
player acts as the server and the other connects as a client. The server
must have UDP port 1234 open to the machine running the VDrift server.

The server player starts a new game, selecting the car he wishes to drive
and the track to drive on. He should choose the networked free drive mode,
then select "host", and start the game.

Then, the client starts a new game in networked free drive mode but
selects "client" and enters the server player's ip address instead of
selecting host. (To change between host/client use the up/down arrow
keys.) Now, the server player's game will be reset, and the client
player's car will appear in front of him. Both cars can then drive on the
track simultaneously.

1.3. Q: How to play with the keyboard?
     A: It is important to note that VDrift uses a manual transmission. The default
keys for operating the transmission are:

Delete - disengages the clutch and shifts down
Page Down - disengages the clutch and shifts up

So to start the car moving from neutral, press Page Down to shift to first
gear, then release the Page Down key to engage the clutch. The car is now
in gear. Don't forget to give it enough gas as you do this or you will
stall the car. Try not to give it too much or you'll just spin out.

See also FAQ: How to start the car?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=3).

1.4. Q: How to play with the mouse?
     A: Mouse driving will be in the next version.

Enabling Mouse Controls
To enable mouse driving, either select that option in the menu under
Options -> Controls -> Mouse, or press the middle mouse button.

Using Mouse Controls
Moving the mouse up and down accelerates or decelerates. Moving it left or
right steers the car in that direction. Two indicator bars at the bottom of
the screen show the position of the mouse controls to help you guide your
movements. Pressing the left mouse button shifts up, pressing the right
mouse button shifts down.

Adjusting Mouse Controls
To adjust the sensitivity of the mouse controls, use the Steering
Sensitivity, Gas/Brake Sensitivity and Gas/Brake Deadzone settings in the
menu under Options -> Controls -> Mouse.

1.5. Q: How to start the car?
     A: When the simulation begins, the car's engine is already running. If the
engine stalls, the default key to start it is the S key on the keyboard.
The car's transmission must be in neutral before the car can be started,
however.

1.6. Q: Why is drifting so difficult in the default car?
     A: The default car is configured like a recent Mustang GT, and so although
it's got 300 hp, it's very heavy, and not well suited to drifting.  Stay
tuned for a later release that will include cars that are much more suited
to drifting.


2. Development
2.1. Q: How to add a new resolution to the game?
     A: You can add a new resolution to the list that gets displayed in the in-game
display options by editing the vdrift/data/lists/videomodes file.  Any
video mode in this file will be checked at run-time to see if you graphics
card can display it.  If so, it will be added to the list.  If there's a
resolution that you add this way, let us know by posting in the feature
request forum so that we can add it to the list in the next official
release.

2.2. Q: How to add new cars to VDrift?
     A: See also: FAQ: What sound/graphics formats does VDrift use?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=12)

Get the Model Pack
Download the model pack from the project files page
(http://sourceforge.net/project/showfiles.php?group_id=137283).

Create Models
You will need to create 3D models using Blender for the car's body, the
glass pieces, and the wheels. Each different model must be a separate
Blender object and each must have a separate texture. Models must be
entirely made of triangles. Faces (and perhaps individual vertices) can be
set to smooth or solid shading, and that will get exported in the joe file.
The best way to do smoothing is to select all of the faces, set solid, and
then select groups that should be blended together and do set smooth
individually. That makes it so that smooth parts that intersect in a hard
edge have correct normals. Don't use any double-sided faces.

Body Model
In the model pack you will find a Blender file "test.blend". This is the
default car model. The glass is one object and the rest of the car is one
object. This allows you to export the glass as a "glass.joe" file and the
rest of the car as a "body.joe" file. The car should be in the
neighborhood of 3500 faces (car and windows combined), although less is of
course possible and more is probably also acceptable.

Interior Model
The interior model should fit inside the body model to provide the inside
of the car. This is a separate model so it can appear flat instead of
shiny like the painted exterior. The interior model should share the
center point or object handle of the body model so they fit together
perfectly without being transposed.

Wheel Model
The file "wheel.blend" is the default wheel model. Try to keep your wheel
model under 1000 faces. The wheel model must be centered at the origin.

Texture the Models
A single UV map can be used per object for texturing. The .png files are
the textures for each associated .joe model. There is also a "shadow.png"
that is used for the car's shadow on the ground. The textures must be
512x512 24- or 32-bit PNG images. Their names should be the same as the
model they coordinate with except for the .png extension at the end. For
example, the texture for the model "body.joe" must be named "body.png".

Brake lights
Add a texture "brake.png" that is the same as the body graphic, but the
brake lights are now on and the rest of the file is black. This should be
a 24-bit png file (no alpha channel).

Export the Models
Using the Python script in the model pack ("export-joe-0.3.py") you can
export a Blender model to JOE format. The mesh needs to be all triangles
before export. The currently selected object is exported. Object level
transformations are not exported, so make sure any rotation or moving or
scaling is done in edit mode, not object mode. You can actually position
the car wherever you want, but all of your positioning must match up with
the values in the car's .xml file. The default exporter setting of 1 frame
is what you should use.

About file
Write a short text file about your car. This goes in the about.txt file.
This information is displayed in the car selection menu. See the other
cars for examples.

Car File
Finally you must write car definition file. You can start by copying
tools/cars/blank.car and entering values to fit your vehicle. Try to find
accurate information regarding the specifications of the car and duplicate
it as closely as possible. The file's fields are explained in detail in the
Vamos docs (http://vamos.sourceforge.net/vamos-docs/Cars.html). The units
are all in MKS (http://scienceworld.wolfram.com/physics/MKS.html). It
might also help to read The Physics of Racing
(http://www.miata.net/sport/Physics/) by Brian Beckman. Needless to say it
requires a lot of knowledge to write one from scratch so it is suggested
that you try using values from other cars. Many of the community-made cars
for Racer (http://www.racer-xtreme.com/) have very similar values that can
be used for VDrift.

Locations
All the files needed for a car go into the directory corresponding to that
car under vdrift/data/cars/car_name/. You will need to add your car's
car_name to the file vdrift/data/cars/car_list.txt.

Need Help?
If you get stuck, feel free to ask questions in our Help forum
(http://vdrift.sourceforge.net/forum/index.php?forum=1).

Contribute
Once you create a new car please contribute it back to the game so that
others can enjoy it. The best way to do this is to start a thread in our
Development forum
(http://vdrift.sourceforge.net/forum/index.php?forum=5).


Note: information regarding interiors and brake lights should be added
here once those features are released.

2.3. Q: How to customize the game data?
     A: There are two ways to customize the game data in VDrift. You can change all
the files by putting copies in your userdata directory, or you can change
settings for the cars through the carsettings directory.

Customizing All Game Data - userdata
VDrift automatically checks in /home/user/.vdrift/userdata/ for data
files. If they aren't there, the ones in /usr/share/games/vdrift/ (or
whatever your system wide data directory is) are used instead. So, you can
copy files to the userdata directory, and modify them as you like. 

Example: Adding a new car
Copy /usr/share/games/vdrift/cars/car_list.txt to
~/.vdrift/userdata/cars/car_list.txt.
Modify ~/.vdrift/userdata/cars/car_list.txt - add a line that says
"my_car" at the end.
Create a directory ~/.vdrift/userdata/cars/my_car and put your car's files
in there. (See FAQ: How to add new cars to VDrift?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=14) for more
info on adding cars.)

Customizing Car Settings - carsettings
In your user's .vdrift directory there is a subdirectory carsettings/. In
this directory you may place files to modify the settings of any car that
the game can load. This file is named the same as the car with no
extension. This file also contains a parts section which allows you to
specify add-on parts.

Example:
Create a file ~/.vdrift/carsettings/GT and put the following in it:
[ brakes-front ]
bias = 0.6

[ brakes-rear ]
bias = 0.4

[ parts ]
part-00 = tires/semisim1-front
part-01 = tires/semisim1-rear
part-02 = brake/carbon-metallic1

2.4. Q: How to edit the menus?
     A: The menus are defined as text files in the vdrift/data/lists/menus/
directory. The file format is fairly simple. The first two numbers ar the
x and y coordinates of where to put the upper left corner of the menu
(from 0 to 1, 1 being all the way to the right of the screen). Then, each
pair of lines follows this format: 
 
Displayed Text for this Menu Item 
selectable(menu to go to or "no") size(font size, 6 is a normal size)
spaceafter(space after this menu item) red green blue ! 

The displayed text must be on its own line. The second line must always
end with a space and then an exclamation point. The red, green and blue
values are floating point numbers between 0.0 and 1.0. In other words to
mix white you'd use 1.0 1.0 1.0 or for black 0.0 0.0 0.0 or for medium
purple 0.5 0.0 0.5.

Example menu entries:
# this entry is not selectable, will show up red and big
Main Menu
no 8 1.0 0.0 0.0 !

# this entry will be greenish, and when selected will go to the menu
# defined in the NewGame menu file
New Game
NewGame 6 0.5 0.8 0.5 !

Take a look at some of the existing menu entries for more examples.

2.5. Q: How to get the latest development version?
     A: This project uses a Subversion (http://subversion.tigris.org/) (SVN)
repository for revision control. If you've never used Subversion before,
you might want to check out the Subversion book
(http://svnbook.red-bean.com/). To check out the latest VDrift code,
install the Subversion client and use this command:

svn checkout http://svn.vdrift.net/repos/vdrift/trunk vdrift

This will create a new directory vdrift/ in your working directory from
the main trunk of the repository.

You may also browse the repository interactively by pointing your web
browser at svn.vdrift.net (http://svn.vdrift.net/).

See also FAQ: Who may make commits to the subversion repository?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=20) and FAQ: How
to submit a patch?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=19).

2.6. Q: How to submit a patch?
     A: You can post in our forums (http://vdrift.sourceforge.net/forum/index.php),
under Development (http://vdrift.sourceforge.net/forum/index.php?forum=5)
or perhaps Bugs (http://vdrift.sourceforge.net/forum/index.php?forum=3) or
Feature Requests (http://vdrift.sourceforge.net/forum/index.php?forum=2) if
you want to put some code behind your suggestions.

When posting a patch in the forums, please make sure you surround the
content of your patch with the [code] and [/code] tags. This ensures it
will be formatted properly. Also, be sure to preview your post before
submitting it, and check it for errors.

Patches should be made with diff
(http://www.gnu.org/software/diffutils/diffutils.html) against the latest
development version of VDrift. See FAQ: How to get the latest development
version? (http://vdrift.sourceforge.net/faqman/index.php?op=view&t=18) If
you don't know how to make a patch, try googling
(http://www.google.com/search?q=how+to+make+a+patch+diff).

2.7. Q: How to use SCons?
     A: SCons is a replacement for autotools written in Python. For full
instructions on compiling VDrift with SCons, see FAQ: How to install
VDrift on Linux?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=5).

Note: Throughout the scons command will be used; if you are using
scons-local that is distributed with VDrift you'll need to replace every
instance of scons with ./scons.py.

Compile
To compile VDrift, simply run SCons. It reads the root level SCons
configuration file, SConstruct, as well as the configuration files in
subdirectories (called SConscript), when it is run to see what to do.
scons
SCons starts by checking your system for available libraries. If things go
well, this will look something like this:
you@yourcomputer:~/games/vdrift$ scons
scons: Reading SConscript files ...
Checking for main() in C library GL... yes
Checking for main() in C library GLU... yes
Checking for main() in C library openal... yes
Checking for C++ header file SDL/SDL.h... yes
Checking for C++ header file SDL/SDL_image.h... yes
Checking for C++ header file SDL/SDL_net.h... yes
scons: done reading SConscript files.
Now, SCons will begin compiling VDrift, one file at a time, starting with
the Vamos files and ending with linking the main executable. When you
change a source file and run scons again, it will only recompile the parts
of the project necessitated by the change you made.

Clean
When building a project it is sometimes necessary to "clean" a build
(remove all built files). This can be done with the following command:
scons -c
All the .o, .a, and binary executable files will be removed. Then when you
run scons again, it will rebuild all the files, regardless of what has been
changed.

Help
If you wish to list the options available at build time you may do so by
executing scons -h. This will show all the available options, their
default values, and their current values.

Quiet
If you want SCons to give less verbose output when compiling use the -Q
option.

2.8. Q: What are the current development goals?
     A: VDrift aims to be a realistic racing game where it is possible to do drift
racing on road courses. Other things that have a high probability of being
implemented:
ability to exchange replays
allow the player to tune the car in the game and exchange settings
grip mode with single player time trial, head to head multiplayer, and
time trial multiplayer
drift mode with single player time trial, head to head multiplayer, and
time trial multiplayer
autocross mode with in-game editor, singleplayer time trial, multiplayer
time trial

You can check out the current Todo
(http://vdrift.sourceforge.net/staticpages/index.php/todo) for information
regarding upcoming changes.

2.9. Q: What sound/graphics formats does VDrift use?
     A: Textures are all in Portable Network Graphic (PNG)
(http://www.libpng.org/pub/png/) format. Graphics can be 24 or 32 bit
color, but if you don't need the Alpha channel leave it out. We prefer to
produce these graphics using The GIMP (http://gimp.org/), and many of the
originals are in GIMP's native format (XCF). Other originals are created
in Inkscape (http://inkscape.org/) using its native Scalable Vector
Graphics (SVG) (http://www.w3.org/TR/SVG/) format.

Models used in the game are all JOE format, which is produced by a Python
script for Blender3D (http://www.blender3d.org/). Currently models are
used for cars, glass, interiors, wheels, trees, and . Get the model pack
on the VDrift project files page
(http://sourceforge.net/project/showfiles.php?group_id=137283) for the JOE
export script, an example of a model used in the game, and original
textures for the model.

Sounds are in PCM Waveform (WAV) format. We recommend Audacity
(http://audacity.sourceforge.net/).

2.10. Q: Where to submit bug reports/feature requests?
      A: If you think you've found a bug in VDrift, please check the Bugs forum
(http://vdrift.sourceforge.net/forum/index.php?forum=3) on this site to
see if anyone else has encountered this bug. If not, please start a thread
about it. We don't have a real bug tracker set up yet but the forums will
do for now.

If you have an idea for a new feature you'd like to see in VDrift, please
post in our Feature Requests forum
(http://vdrift.sourceforge.net/forum/index.php?forum=2).

2.11. Q: Who may make commits to the subversion repository?
      A: While anonymous read access is available on the repository, user
authentication is used to restrict write access on the repository. If you
would like to contribute code, we ask that you first submit patches (See
FAQ: How to submit a patch?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=19)).


3. General
3.1. Q: How to enable FMOD?
     A: AMD64 Linux users: Please read FAQ: Will VDrift compile on an AMD64
machine? (http://vdrift.sourceforge.net/faqman/index.php?op=view&t=23).

To use the FMOD sound library instead of OpenAL, you need to supply the
fmod=1 option to the scons command used to compile.

Before doing this you must of course have FMOD installed on your system. A
version is distributed with the VDrift source package, copy it from
vdrift/lib/ to /usr/lib/ or some other appropriate spot on your system.
You may need to run ldconfig (as root). Then recompile.

For example:
scons fmod=1
sudo scons install
vdrift

See FAQ: How to install VDrift on Linux?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=5) for full
installation instructions.

3.2. Q: How to increase game performance on slower hardware?
     A: At this stage in its development VDrift is fairly graphically intensive.
There are a few options available to make the game faster if your graphics
card or CPU isn't the latest and greatest.

Detail Settings
There are options to turn down the level of detail on the terrain and
trees which will allow the game to run a lot faster on some hardware. The
trees slow things down a good bit and you can turn them off completely if
you like. These settings can be found under the Options -> Display menu.

Heads Up Display
Some users have reported that disabling the graphical HUD makes VDrift run
much faster on their machine. You can toggle it on/off in Options ->
Display as well.

Framerate
You can measure the game's performance by enabling the framerate counter.
This option is off by default, but can be turned on in the Options ->
Display menu.

See also FAQ: What are the hardware requirements to play VDrift?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=9)

3.3. Q: How to install VDrift on Linux?
     A: Make sure your computer's hardware meets the requirements for the game (see
FAQ: What are the hardware requirements to play VDrift?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=9) for more
info).

Make sure you have all the required libraries and build tools (see FAQ:
What software is required to compile VDrift for Linux?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=8) for more
info).

As of the 2005-11-03 release, VDrift is available as both a source package
and a binary package.

** VDrift Binary Package **
Download (http://sourceforge.net/project/showfiles.php?group_id=137283)
the latest VDrift Linux binary package and unpack it. In this package you
might find the files and directories:

vdrift-release-bin/vdrift
vdrift-release-bin/vdrift-install.sh
vdrift-release-bin/docs/
vdrift-release-bin/data/

Change directories to the vdrift directory (whatever it is called). From
there, you can either run VDrift from here or you can install it
system-wide. To run VDrift right now, use:

./vdrift

To install VDrift to a system directory use the script
./vdrift-install.sh. This script installs the VDrift binary and data into
the proper places. Make sure you run it as a root-level user.

Usage:
./vdrift-install.sh /path/to/vdrift/binary /path/to/vdrift/data

Example:
./vdrift-install.sh /usr/games/bin /usr/share/games/vdrift

Here the vdrift exectuable will be /usr/games/bin/vdrift and the data will
go
in /usr/share/games/vdrift. Make sure that the binary directory is in your
PATH.

** VDrift Source Package **
Download (http://sourceforge.net/project/showfiles.php?group_id=137283)
the latest VDrift Linux source package and unpack it. All the files in the
package are in a directory called vdrift-[version]-src where [version] is
something like 2005-10-02. We'll just refer to the directory name as
"vdrift" for simplicity.

As of the 2005-10-02 release, VDrift no longer uses ./configure, make,
etc. (autotools). Now the project is built with SCons
(http://www.scons.org/) which is written in Python and makes much better
sense than autotools in many ways.

There are two ways to use scons. The first way is to install scons on your
system, then you can use it simply by the name of the program, "scons". The
second way is to use the scons-local package (included with VDrift) which
will do the same thing but doesn't require that you install scons on your
system. In this case you use the "./scons.py" command instead of "scons".

So, of course first unpack the vdrift archive, then enter the directory it
creates. After that, if you need scons-local unpack it from the
tools/scons-local-0.96.1.tar.gz file. If you don't need scons-local
proceed with compiling.

Example, with SCons already installed:
tar jxvf vdrift-2005-10-02-src.tar.bz2
cd vdrift-2005-10-02-src
scons
su
scons install
exit
vdrift
Example, without SCons installed, using scons-local:
tar jxvf vdrift-2005-10-02-src.tar.bz2
cd vdrift-2005-10-02-src
tar zxvf tools/scons-local-0.96.1.tar.gz
./scons.py
su
./scons.py install
exit

vdrift

The default directories for VDrift to be installed in are as follows:
bin: /usr/games
prefix: /usr/share/games/vdrift
settings: .vdrift

To change these settings specify the new value when running scons or
./scons.py. The system is intended to remember option values even if only
specified once, but unfortunately due to some bug it doesn't, so you must
specify the options each time, like this:
scons bin=/usr/local/bin prefix=/usr/local/games/vdrift
su
scons install bin=/usr/local/bin prefix=/usr/local/games/vdrift
This will compile VDrift and install the executable at
/usr/local/bin/vdrift, while the VDrift data will go in
/usr/local/games/vdrift/.

If you'd like to use the FMOD sound library, see FAQ: How to enable FMOD?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=22).

For more information about the build system see FAQ: How to use SCons?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=27)

3.4. Q: How to install VDrift on OS X?
     A: OS X support will be in the next version.

OS X binaries
These will be released with the next version.

Compiling from source
Download the latest source version of VDrift that supports OS X. Currently
this is in SVN but has not been released. Use the XCode project files in
the tools/osx/ directory.

3.5. Q: How to install VDrift on Windows?
     A: First, make sure your computer's hardware meets the requirements for the
game (see FAQ: What are the hardware requirements to play VDrift?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=9) for more
info). Then, download
(http://sourceforge.net/project/showfiles.php?group_id=137283) the latest
release of the VDrift win32 binary package and unzip it using your
favorite unzipping tool. This will create a new directory called VDrift.
In this directory, you will find vdrift.exe, which you can then run.

A proper Windows installer is coming in a future release.

3.6. Q: How to uninstall VDrift on Linux?
     A: Remove with SCons
The scons flag to clean a buid is "-c". It will clean the default target
or any other target you specify, such as "install". So, for example:
scons -c install
will uninstall VDrift system-wide. It will also clean your build/
directory. This will not remove your ~/.vdrift/ directory.

Remove manually
To uninstall VDrift after using SCons to install it, you only need to use
one command or two. I am going to assume that you installed using the
default prefix /usr/share/games and default bin dir /usr/games. If this is
not the case adjust the commands below accordingly. Run the following as
root:
rm -rf /usr/games/vdrift /usr/share/games/vdrift
If you would also like to remove your settings directory you can do this
as a normal (non-root) user:
rm -rf ~/.vdrift

3.7. Q: Is there a binary release or must the game be compiled?
     A: Currently there is only a binary release for Windows but not for Linux.
Linux users must download the source package and compile it. A future
release will also be distributed as all the current forms, plus a
precompiled binary for Linux as well as a source package for Windows.

See also FAQ: How to install VDrift on Linux?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=5) and FAQ: How
to install VDrift on Windows?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=6).

3.8. Q: What are the hardware requirements to play VDrift?
     A: Video card: A GeForce2 with 32 MB of VRAM or better is required to play,
but a GeForce3 with 64 MB VRAM or better is recommended.
Processor: Not much testing has been done in this area. It runs very well
on a 2 GHz machine, but might run well on something as slow as 1 GHz
(provided a decent video card is present).
Input: Keyboard handling is unfinished; to play the game you will need an
analog input device (joystick, gamepad or steering wheel).

3.9. Q: What software is required to compile/run VDrift for Linux?
     A: Libraries
You must have libsdl (http://www.libsdl.org/), libsdl-image, libsdl-net,
libopenal (http://openal.org/) or libfmod (http://fmod.org/), and the
OpenGL libraries installed to play VDrift. To compile, you must also have
the headers (usually the -dev packages, consult your distro's docs) for
these libraries.

The default sound library used by VDrift is OpenAL. FMOD is also supplied
in the Linux release as libfmod-3.74.so. See FAQ: How to enable FMOD?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=22) if you'd
like to use it. VDrift has not been tested with OpenAL 1.1, only 1.0.

Build Tools
To compile VDrift, you'll also need gcc (http://gcc.gnu.org/), and
optionally SCons (http://www.scons.org/).

3.10. Q: Who made this game?
      A: VDrift was created by Joe Venzon
(http://vdrift.sourceforge.net/users.php?mode=profile&uid=5) who continues
to write all the source code for the game, and created everything in the
game not attributed to someone else below. The physics engine in the game
is the Vamos automotive simulator (http://vamos.sourceforge.net/) written
by Sam Varner. Other contributors include:

Chris Guirl (http://vdrift.sourceforge.net/users.php?mode=profile&uid=4) -
this web site, Subversion repository, SCons build scripts, XS model, the
tress, some other graphics, menus, bug reports and generally annoying Joe
Teemu Haapoja -  GT model originally from the Motorsport
(http://www.motorsport-sim.org/) project.
loungekid (on race sim central (http://rscnet.org/) and Racer-Xtreme
(http://www.racer-xtreme.com/)) - settings and model of CS originally for
Racer (http://www.racer.nl).

3.11. Q: Why does ./configure fail to find install-sh?
      A: VDrift no longer uses autotools. See FAQ: How to install VDrift on Linux?
(http://vdrift.sourceforge.net/faqman/index.php?op=view&t=5) for detailed
installation instructions.

3.12. Q: Will VDrift compile on an AMD64 machine?
      A: Yes, VDrift will compile on AMD64, but only using OpenAL; there is no AMD64
Linux FMOD library.
